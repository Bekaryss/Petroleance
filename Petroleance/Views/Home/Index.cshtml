
@{
    ViewBag.Title = "Home";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="row no-mar-bottom">
    <div class="">
        <div class=""><img style="margin:0; padding:0" class="responsive-img" src="~/Content/ImageContent/main_id9.png"></div>
    </div>
</div>
<div class="text-main row" >
    <div class="container">
        <p class="main-text">
            <b>Petroleance</b> - это студенческая организация основанная при поддержке Казахстанско Британском Университете. Наша организация занимается повышением знаний и технического кругазора студентов учащихся по специальности нефтегазовое дело, а также, объединяющая студентов, главной целью которых является «Повышение уровня отечественного образования на самый высокий уровень»
        </p>
    </div>
   
</div>
<div class="row grey lighten-4 no-mar-bottom">
    <div class="container main-slider">
        <div class="row">
            <br />
            <h5>Новости</h5>
        </div>
        <div class="col l12" id="main-carousel">
            @foreach (var item in ViewBag.Aticles)
            {
                <div class="col s2 m3 l4">
                    <div class="card hoverable">
                        <a class="card-image waves-effect waves-block waves-light" href="@Url.Action("NewsId", "Home", new { id = item.Id})">
                            <img class="img-responsive" src="@Url.Content(item.SImage.FilePath +"/"+item.SImage.Name + "middle" + item.SImage.Extension)">
                        </a>
                        <div class="card-content">
                            <h5>@item.Title.Substring(0, item.Title.Length < 26 ? item.Title.Length : 26)</h5>
                            <div class="news-card-title">
                                @if (item.Content != null)
                                {
                                    @Html.Raw(item.Content.Substring(0, item.Content.Length < 40 ? item.Content.Length : 40))
                                }
                              
                            </div>
                            <div class="card-data valign-wrapper">
                                <div class="left">
                                   @item.Date
                                </div>
                            </div>
                        </div>
                    </div>                  
                </div>
            }
            
        </div>
    </div>
</div>

<div class="row gellery">
    <div class="row white">
        <div class="container">
            <br />
            <h5  class="row">Галерея</h5>
        </div>
        <div id="grid-container">

            @foreach (var item in ViewBag.image)
            {
                <div class="grid-item">
                    <a href="@Url.Content(item.FilePath +"/"+item.Name + "large" + item.Extension)" alt="@item.Alt" data-gallery>
                        <div class="blur">
                            <img src="@Url.Content(item.FilePath +"/"+item.Name + "middle" + item.Extension)" alt="@item.Alt" />
                        </div>
                    </a>
                </div>
            }
        </div>
    </div>
    <div class="blueimp-gallery blueimp-gallery-controls">
        <div class="slides"></div>
        <h3 class="title"></h3>
        <a class="prev">‹</a>
        <a class="next">›</a>
        <a class="close">×</a>
        <a class="play-pause"></a>
        <ol class="indicator"></ol>
    </div>
</div>

@section scripts {
    <script>
         var items = '[data-gallery]';
            var container = '.blueimp-gallery';

            $(document).on('click', items, function (event) {
                new window.blueimp.Gallery(
                    $(items),
                    {
                        container: $(container)[0],
                        index: this,
                        event: event,

                        onopen: function () { },
                        onopened: function () { },
                        onslide: function () { },
                        onslideend: function () { },
                        onslidecomplete: function () { },
                        onclose: function () { },
                        onclosed: function () { }
                    }
                )
            });
        var parameters = {
            gridContainer: '#grid-container',
            gridItems: '.grid-item',
            enableImagesLoaded: true
        };
        var grid = new justifiedGrid(parameters);
        grid.initGrid();
        
    </script>
    }